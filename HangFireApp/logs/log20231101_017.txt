2023-11-01 16:41:48.676 +03:00 [INF] Hisse senetleri alınıyor bu işlem 1dk-3dk arası sürebilmektedir...
2023-11-01 16:41:52.543 +03:00 [INF] Tüm veriler çekildi. İşlem Başarılı.
2023-11-01 16:41:56.634 +03:00 [WRN] HTTP isteği sırasında hata oluştu: Hedef makine etkin olarak reddettiğinden bağlantı kurulamadı. (localhost:7261)
2023-11-01 16:42:07.139 +03:00 [INF] Start installing Hangfire SQL objects...
2023-11-01 16:42:07.298 +03:00 [INF] Hangfire SQL objects installed.
2023-11-01 16:42:07.349 +03:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: (localdb)\MSSQLLocalDB@StockMarketDbHangFire'
2023-11-01 16:42:07.350 +03:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2023-11-01 16:42:07.351 +03:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2023-11-01 16:42:07.466 +03:00 [INF] Server bahadir-aksakal:17388:95e80495 successfully announced in 90,7395 ms
2023-11-01 16:42:07.474 +03:00 [INF] Server bahadir-aksakal:17388:95e80495 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2023-11-01 16:42:07.558 +03:00 [INF] Server bahadir-aksakal:17388:95e80495 all the dispatchers started
2023-11-01 16:42:07.688 +03:00 [INF] Hangfire arka plan işlemleri başlatıldı. Çıkmak için ENTER'a basın.
2023-11-01 16:42:07.712 +03:00 [WRN] Recurring job 'BackGroundJobSendMailWhenPricesChanged.SendMailWhenPricesChanged' can't be scheduled due to an error and will be retried in 00:00:15.
System.InvalidOperationException: Recurring job can't be scheduled, see inner exception for details.
 ---> Hangfire.Common.JobLoadException: Could not load the job. See inner exception for the details.
 ---> Newtonsoft.Json.JsonSerializationException: Could not create an instance of type Microsoft.Extensions.Configuration.IConfiguration. Type is an interface or abstract class and cannot be instantiated. Path 'Providers', line 1, position 13.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultCreator)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Hangfire.Common.SerializationHelper.Deserialize(String value, Type type, SerializationOption option)
   at Hangfire.Storage.InvocationData.DeserializeArgument(String argument, Type type)
--- End of stack trace from previous location ---
   at Hangfire.Storage.InvocationData.DeserializeArgument(String argument, Type type)
--- End of stack trace from previous location ---
   at Hangfire.Storage.InvocationData.DeserializeArgument(String argument, Type type)
   at Hangfire.Storage.InvocationData.DeserializeArguments(MethodInfo methodInfo, String[] arguments)
   at Hangfire.Storage.InvocationData.DeserializeJob()
   --- End of inner exception stack trace ---
   at Hangfire.Storage.InvocationData.DeserializeJob()
   at Hangfire.RecurringJobEntity..ctor(String recurringJobId, IDictionary`2 recurringJob, ITimeZoneResolver timeZoneResolver, DateTime now)
   --- End of inner exception stack trace ---
   at Hangfire.Server.RecurringJobScheduler.ScheduleRecurringJob(BackgroundProcessContext context, IStorageConnection connection, String recurringJobId, RecurringJobEntity recurringJob, DateTime now)
2023-11-01 16:42:07.783 +03:00 [INF] GetStocksService 0. kere çalışıyor
2023-11-01 16:42:11.603 +03:00 [WRN] Stopping the server due to DomainUnload or ProcessExit event...
2023-11-01 16:42:11.604 +03:00 [INF] Server bahadir-aksakal:17388:95e80495 caught stopping signal...
2023-11-01 16:42:11.614 +03:00 [INF] Server bahadir-aksakal:17388:95e80495 caught stopped signal...
2023-11-01 16:42:11.616 +03:00 [WRN] Server bahadir-aksakal:17388:95e80495 caught shutdown signal...
2023-11-01 16:42:11.620 +03:00 [WRN] Server bahadir-aksakal:17388:95e80495 stopped non-gracefully due to CountersAggregator. Outstanding work on those dispatchers could be aborted, and there can be delays in background processing. This server instance will be incorrectly shown as active for a while. To avoid non-graceful shutdowns, investigate what prevents from stopping gracefully and add CancellationToken support for those methods.
2023-11-01 16:42:11.633 +03:00 [INF] Server bahadir-aksakal:17388:95e80495 successfully reported itself as stopped in 5,0942 ms
2023-11-01 16:42:11.633 +03:00 [INF] Server bahadir-aksakal:17388:95e80495 has been stopped in total 19,284 ms
