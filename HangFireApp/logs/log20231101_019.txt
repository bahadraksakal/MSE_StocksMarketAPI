2023-11-01 17:10:09.919 +03:00 [INF] Hisse senetleri alınıyor bu işlem 1dk-3dk arası sürebilmektedir...
2023-11-01 17:10:13.777 +03:00 [INF] Tüm veriler çekildi. İşlem Başarılı.
2023-11-01 17:10:17.880 +03:00 [WRN] HTTP isteği sırasında hata oluştu: Hedef makine etkin olarak reddettiğinden bağlantı kurulamadı. (localhost:7261)
2023-11-01 17:11:12.441 +03:00 [INF] Start installing Hangfire SQL objects...
2023-11-01 17:11:12.579 +03:00 [INF] Hangfire SQL objects installed.
2023-11-01 17:11:12.607 +03:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: (localdb)\MSSQLLocalDB@StockMarketDbHangFire'
2023-11-01 17:11:12.608 +03:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2023-11-01 17:11:12.609 +03:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2023-11-01 17:11:12.733 +03:00 [INF] Server bahadir-aksakal:23360:fe74ffe9 successfully announced in 102,2492 ms
2023-11-01 17:11:12.741 +03:00 [INF] Server bahadir-aksakal:23360:fe74ffe9 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2023-11-01 17:11:12.887 +03:00 [INF] Server bahadir-aksakal:23360:fe74ffe9 all the dispatchers started
2023-11-01 17:11:12.962 +03:00 [WRN] Recurring job 'BackGroundJobSendMailWhenPricesChanged.SendMailWhenPricesChanged' can't be scheduled due to an error and will be retried in 00:00:15.
System.InvalidOperationException: Recurring job can't be scheduled, see inner exception for details.
 ---> Hangfire.Common.JobLoadException: Could not load the job. See inner exception for the details.
 ---> Newtonsoft.Json.JsonSerializationException: Could not create an instance of type Microsoft.Extensions.Configuration.IConfiguration. Type is an interface or abstract class and cannot be instantiated. Path 'Providers', line 1, position 13.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultCreator)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Hangfire.Common.SerializationHelper.Deserialize(String value, Type type, SerializationOption option)
   at Hangfire.Storage.InvocationData.DeserializeArgument(String argument, Type type)
--- End of stack trace from previous location ---
   at Hangfire.Storage.InvocationData.DeserializeArgument(String argument, Type type)
--- End of stack trace from previous location ---
   at Hangfire.Storage.InvocationData.DeserializeArgument(String argument, Type type)
   at Hangfire.Storage.InvocationData.DeserializeArguments(MethodInfo methodInfo, String[] arguments)
   at Hangfire.Storage.InvocationData.DeserializeJob()
   --- End of inner exception stack trace ---
   at Hangfire.Storage.InvocationData.DeserializeJob()
   at Hangfire.RecurringJobEntity..ctor(String recurringJobId, IDictionary`2 recurringJob, ITimeZoneResolver timeZoneResolver, DateTime now)
   --- End of inner exception stack trace ---
   at Hangfire.Server.RecurringJobScheduler.ScheduleRecurringJob(BackgroundProcessContext context, IStorageConnection connection, String recurringJobId, RecurringJobEntity recurringJob, DateTime now)
2023-11-01 17:11:13.042 +03:00 [WRN] Failed to process the job '58': an exception occurred. Retry attempt 4 of 10 will be performed in 00:01:36.
System.InvalidOperationException: The type `HangFireApp.BackGroundJobs.BackGroundJobSendMailWhenPricesChanged` does not contain a method with signature `SendMailWhenPricesChanged(Emailer)`
   at Hangfire.Storage.InvocationData.DeserializeJob()
2023-11-01 17:11:13.047 +03:00 [INF] Hangfire arka plan işlemleri başlatıldı. Çıkmak için ENTER'a basın.
2023-11-01 17:11:28.050 +03:00 [WRN] Recurring job 'BackGroundJobSendMailWhenPricesChanged.SendMailWhenPricesChanged' can't be scheduled due to an error and will be retried in 00:00:15.
System.InvalidOperationException: Recurring job can't be scheduled, see inner exception for details.
 ---> Hangfire.Common.JobLoadException: Could not load the job. See inner exception for the details.
 ---> Newtonsoft.Json.JsonSerializationException: Could not create an instance of type Microsoft.Extensions.Configuration.IConfiguration. Type is an interface or abstract class and cannot be instantiated. Path 'Providers', line 1, position 13.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultCreator)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Hangfire.Common.SerializationHelper.Deserialize(String value, Type type, SerializationOption option)
   at Hangfire.Storage.InvocationData.DeserializeArgument(String argument, Type type)
--- End of stack trace from previous location ---
   at Hangfire.Storage.InvocationData.DeserializeArgument(String argument, Type type)
--- End of stack trace from previous location ---
   at Hangfire.Storage.InvocationData.DeserializeArgument(String argument, Type type)
   at Hangfire.Storage.InvocationData.DeserializeArguments(MethodInfo methodInfo, String[] arguments)
   at Hangfire.Storage.InvocationData.DeserializeJob()
   --- End of inner exception stack trace ---
   at Hangfire.Storage.InvocationData.DeserializeJob()
   at Hangfire.RecurringJobEntity..ctor(String recurringJobId, IDictionary`2 recurringJob, ITimeZoneResolver timeZoneResolver, DateTime now)
   --- End of inner exception stack trace ---
   at Hangfire.Server.RecurringJobScheduler.ScheduleRecurringJob(BackgroundProcessContext context, IStorageConnection connection, String recurringJobId, RecurringJobEntity recurringJob, DateTime now)
2023-11-01 17:11:32.829 +03:00 [INF] Server bahadir-aksakal:23360:fe74ffe9 caught stopping signal...
2023-11-01 17:11:32.890 +03:00 [INF] Server bahadir-aksakal:23360:fe74ffe9 All dispatchers stopped
2023-11-01 17:11:32.899 +03:00 [INF] Server bahadir-aksakal:23360:fe74ffe9 successfully reported itself as stopped in 1,7971 ms
2023-11-01 17:11:32.900 +03:00 [INF] Server bahadir-aksakal:23360:fe74ffe9 has been stopped in total 46,9568 ms
2023-11-01 17:16:07.543 +03:00 [INF] Start installing Hangfire SQL objects...
2023-11-01 17:16:07.693 +03:00 [INF] Hangfire SQL objects installed.
2023-11-01 17:16:07.715 +03:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: (localdb)\MSSQLLocalDB@StockMarketDbHangFire'
2023-11-01 17:16:07.716 +03:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2023-11-01 17:16:07.717 +03:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2023-11-01 17:16:07.837 +03:00 [INF] Server bahadir-aksakal:9348:1657c28d successfully announced in 97,3404 ms
2023-11-01 17:16:07.845 +03:00 [INF] Server bahadir-aksakal:9348:1657c28d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2023-11-01 17:16:07.972 +03:00 [INF] Server bahadir-aksakal:9348:1657c28d all the dispatchers started
2023-11-01 17:16:08.023 +03:00 [WRN] Recurring job 'BackGroundJobSendMailWhenPricesChanged.SendMailWhenPricesChanged' can't be scheduled due to an error and will be retried in 00:00:15.
System.InvalidOperationException: Recurring job can't be scheduled, see inner exception for details.
 ---> Hangfire.Common.JobLoadException: Could not load the job. See inner exception for the details.
 ---> System.InvalidOperationException: The type `HangFireApp.BackGroundJobs.BackGroundJobSendMailWhenPricesChanged` does not contain a method with signature `SendMailWhenPricesChanged(Emailer, IConfiguration)`
   at Hangfire.Storage.InvocationData.DeserializeJob()
   --- End of inner exception stack trace ---
   at Hangfire.Storage.InvocationData.DeserializeJob()
   at Hangfire.RecurringJobEntity..ctor(String recurringJobId, IDictionary`2 recurringJob, ITimeZoneResolver timeZoneResolver, DateTime now)
   --- End of inner exception stack trace ---
   at Hangfire.Server.RecurringJobScheduler.ScheduleRecurringJob(BackgroundProcessContext context, IStorageConnection connection, String recurringJobId, RecurringJobEntity recurringJob, DateTime now)
2023-11-01 17:16:08.093 +03:00 [INF] Hangfire arka plan işlemleri başlatıldı. Çıkmak için ENTER'a basın.
2023-11-01 17:16:08.150 +03:00 [INF] GetStocksService 0. kere çalışıyor
